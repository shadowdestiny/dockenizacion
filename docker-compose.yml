version: '3.4'

services:
#  database:
#    image: rmrbest/percona
#    volumes:
#    - "database_volume:/var/lib/mysql"
#    networks:
#      backend:
#        ipv4_address: ${EM_DOCKER_DATABASE_IP}
#    environment:
#      REPLICATION: 'true'
#      REPLICATION_NODE: 1
#      REPLICATION_SLAVE_USER: slave_db1
#      REPLITACION_SLAVE_PASSWORD: euromillions
#      MYSQL_ROOT_PASSWORD: tpl9
#      MYSQL_USER: euromillions
#      MYSQL_PASSWORD: tpl9
#      MYSQL_DATABASE: euromillions

  redis:
    image: redis:latest
    networks:
      - backend

  web:
    build:
      context: src/docker/NEW/web
      target: prod
    image: prod-web:latest
    depends_on:
      - php
    volumes:
      - "./src:/var/www"
    links:
      - php:php
    networks:
      - backend
    environment:
      EM_ENV: ${EM_ENV}

  php:
    build:
      context: src/docker/NEW/php
      target: prod
    image: prod-php:latest
    depends_on:
      - redis
    volumes:
      - "./src:/var/www"
    links:
      - redis:redis
    networks:
      - backend
    environment:
      EM_ENV: ${EM_ENV}
      AWS_ACCESS_KEY_ID: AKIAJ4KKQDQVDECKXUNQ
      AWS_SECRET_ACCESS_KEY: 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

  phpcron:
    build:
      context: src/docker/NEW/php
      target: cron
    image: prod-phpcron:latest
    depends_on:
      - redis
    volumes:
      - "./src:/var/www"
    links:
      - redis:redis
    networks:
      - backend
    environment:
      EM_ENV: ${EM_ENV}
      AWS_ACCESS_KEY_ID: AKIAJ4KKQDQVDECKXUNQ
      AWS_SECRET_ACCESS_KEY: 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


#volumes:
#  database_volume:
#
#networks:
#  backend:
#    ipam:
#      config:
#        - subnet: ${EM_DOCKER_BACKEND_SUBNET}
#  frontend:
#    ipam:
#      config:
#        - subnet: ${EM_DOCKER_FRONTEND_SUBNET}

networks:
  backend: {}
  frontend: {}