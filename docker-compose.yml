# This docker-compose.yml is for devel environment only. (On staging / prod we use the version 2)
version: '3.4'

services:
  database:
    image: rmrbest/percona
    volumes:
      - "database_volume:/var/lib/mysql"
    networks:
      backend:
        ipv4_address: ${EM_DOCKER_DATABASE_IP}
    environment:
      REPLICATION: 'true'
      REPLICATION_NODE: 1
      REPLICATION_SLAVE_USER: slave_db1
      REPLITACION_SLAVE_PASSWORD: euromillions
      MYSQL_ROOT_PASSWORD: tpl9
      MYSQL_USER: euromillions
      MYSQL_PASSWORD: tpl9
      MYSQL_DATABASE: euromillions

  redis:
    image: redis:latest
    networks:
      - backend

  web:
#    build:
#      context: .
#      dockerfile: devOps/docker/web/Dockerfile
#      target: devel
    image: panamedialottery/euromillions-web:staging
    volumes:
      - "./src:/var/www"
    depends_on:
      - php
    links:
      - php:php
    networks:
      - backend
    environment:
      EM_ENV: ${EM_ENV}

  php:
#    build:
#      context: .
#      dockerfile: devOps/docker/php/Dockerfile
#      target: devel
    image: panamedialottery/euromillions-php:staging
    volumes:
      - "./src:/var/www"
    depends_on:
      - redis
      - database
    links:
      - redis:redis
      - database:mysql
    networks:
      - backend
    environment:
      EM_ENV: ${EM_ENV}
      AWS_ACCESS_KEY_ID: AKIAJ4KKQDQVDECKXUNQ
      AWS_SECRET_ACCESS_KEY: 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

  phpcron:
#    build:
#      context: .
#      dockerfile: devOps/docker/php/Dockerfile
#      target: cron
    image: panamedialottery/euromillions-php:cron
    volumes:
      - "./src:/var/www"
    depends_on:
      - redis
      - database
    links:
      - redis:redis
      - database:mysql
    networks:
      - backend
    environment:
      EM_ENV: ${EM_ENV}
      AWS_ACCESS_KEY_ID: AKIAJ4KKQDQVDECKXUNQ
      AWS_SECRET_ACCESS_KEY: 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

  varnish:
    build:
      context: .
      dockerfile: devOps/docker/varnish/Dockerfile
    image: panamedialottery/euromillions-varnish:devel
    depends_on:
      - web
    links:
      - web:backend
    networks:
      backend: {}
      frontend:
        ipv4_address: ${EM_DOCKER_VARNISH_IP}
    environment:
      EM_ENV: ${EM_ENV}

volumes:
  database_volume:

networks:
  backend:
    ipam:
      config:
      - subnet: ${EM_DOCKER_BACKEND_SUBNET}
  frontend:
    ipam:
      config:
      - subnet: ${EM_DOCKER_FRONTEND_SUBNET}