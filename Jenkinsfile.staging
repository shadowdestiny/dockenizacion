pipeline {
    environment {
        EM_ENVIRONMENT = "staging"
        BUILD_IMAGE_TAG = "${env.EM_ENVIRONMENT}_${env.BUILD_NUMBER}"
        RANCHER_STACK_NAME = "euromillions-staging"
    }
    agent {
        label 'aws-slave'
    }
    options {
        skipStagesAfterUnstable()
        timeout( time: 1, unit: 'HOURS' )
    }
    stages {
        /*
        stage('pre-build') {
            steps {
                sh('wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz ')
                sh('wget http://geolite.maxmind.com/download/geoip/database/GeoIPv6.dat.gz ')

                sh('gzip -fd GeoIP.dat.gz ')
                sh('gzip -fd GeoIPv6.dat.gz ')

                sh('mv GeoIP.dat src/data/geoipdatabase ')
                sh('mv GeoIPv6.dat src/data/geoipdatabase ')
            }
        }
        stage('test') {
            environment {
                DOCKER_HUB_CREDENTIALS = credentials('docker_hub')
                DOCKER_HUB_USER = "${env.DOCKER_HUB_CREDENTIALS_USR}"
                DOCKER_HUB_PASSWORD = "${env.DOCKER_HUB_CREDENTIALS_PSW}"
            }
            steps {
                sh('echo test')

                sh('sudo docker login --username $DOCKER_HUB_USER --password $DOCKER_HUB_PASSWORD')
                sh('sudo docker pull panamedialottery/euromillions-php:tools')

                sh('sudo docker build --target tools -f devOps/docker/php/Dockerfile -t panamedialottery/euromillions-php:tools .')
                sh('sudo docker run --rm -v $(pwd)/src:/var/www panamedialottery/euromillions-php:tools composer install --no-progress')

                sh('sudo docker-compose -p test -f docker-compose.test.yml build')
                sh('sudo docker-compose -p test -f docker-compose.test.yml up -d')
                sh('sudo docker-compose -p test -f docker-compose.test.yml exec -T php ./vendor/bin/phpunit -c tests/phpunit.xml')
            }
            post {
                always {
                    // Shutdown test
                    sh('sudo docker-compose -p test -f docker-compose.test.yml down')
                }
            }

        }
        */
        stage('build') {
            environment {
                DOCKER_HUB_CREDENTIALS = credentials('docker_hub')
                DOCKER_HUB_USER = "${env.DOCKER_HUB_CREDENTIALS_USR}"
                DOCKER_HUB_PASSWORD = "${env.DOCKER_HUB_CREDENTIALS_PSW}"
            }

            parallel {
                stage('Test On Windows') {
                    steps {
                        sh('echo run-tests.bat')
                    }
                    post {
                        always {
                           echo 'I succeeeded!'
                        }
                    }
                }
                stage('Test On Linux') {
                    steps {
                        sh('echo run-tests.sh')
                    }
                    post {
                        always {
                           echo 'I succeeeded!'
                        }
                    }
                }
            }

            steps {
                sh('echo build')

                sh('sudo docker login --username $DOCKER_HUB_USER --password $DOCKER_HUB_PASSWORD')

                sh('sudo docker build -t panamedialottery/euromillions-util-nodejs devOps/docker/util-nodejs')
                sh('sudo docker run --rm -v $(pwd)/src:/var/www panamedialottery/euromillions-util-nodejs ./provision-react.sh')
                sh('sudo docker run --rm -v $(pwd)/src:/var/www panamedialottery/euromillions-util-nodejs ./provision-grunt.sh')

                sh('sudo docker build -t panamedialottery/euromillions-php:cron_${BUILD_IMAGE_TAG} -f devOps/docker/php/Dockerfile --target cron .')
                sh('sudo docker push panamedialottery/euromillions-php:cron_${BUILD_IMAGE_TAG}')

                sh('sudo docker run --rm -v $(pwd)/src:/var/www panamedialottery/euromillions-php:tools composer install --no-progress --no-dev --optimize-autoloader')

                sh('sudo docker build -t panamedialottery/euromillions-php:${BUILD_IMAGE_TAG} -f devOps/docker/php/Dockerfile --target staging .')
                sh('sudo docker push panamedialottery/euromillions-php:${BUILD_IMAGE_TAG}')

                sh('sudo docker build -t panamedialottery/euromillions-web:${BUILD_IMAGE_TAG} -f devOps/docker/web/Dockerfile --target staging .')
                sh('sudo docker push panamedialottery/euromillions-web:${BUILD_IMAGE_TAG}')
            }
        }
        /*
        stage('deploy') {
            environment {
                RANCHER_ENV_URL_DCORTO = "http://34.247.7.73:8080/v2-beta/projects/1a2494"
                RANCHER_ENV_KEY_DCORTO = credentials('RANCHER_ENV_KEY_DCORTO')
                RANCHER_ENV_SECRET_DCORTO = credentials('RANCHER_ENV_SECRET_DCORTO')
                RANCHER_COMPOSE_CMD_BASE = "rancher-compose --url $RANCHER_ENV_URL_DCORTO --access-key $RANCHER_ENV_KEY_DCORTO --secret-key $RANCHER_ENV_SECRET_DCORTO -p euromillions-staging -f docker-compose.prod.yml -f docker-compose.staging.yml -r rancher-compose.staging.yml -e .env.staging"
            }
            steps {
                sh('echo deploy')

                sh('sudo docker tag panamedialottery/euromillions-php:cron_${BUILD_IMAGE_TAG} panamedialottery/euromillions-php:cron')
                sh('sudo docker push panamedialottery/euromillions-php:cron')

                sh('sudo docker tag panamedialottery/euromillions-php:${BUILD_IMAGE_TAG} panamedialottery/euromillions-php:${EM_ENVIRONMENT}')
                sh('sudo docker push panamedialottery/euromillions-php:${EM_ENVIRONMENT}')

                sh('sudo docker tag panamedialottery/euromillions-web:${BUILD_IMAGE_TAG} panamedialottery/euromillions-web:${EM_ENVIRONMENT}')
                sh('sudo docker push panamedialottery/euromillions-web:${EM_ENVIRONMENT}')

                sh('${RANCHER_COMPOSE_CMD_BASE} up -d -p -u')
                sh('${RANCHER_COMPOSE_CMD_BASE} -d -p -u --force-upgrade web php phpcron')
                sh('${RANCHER_COMPOSE_CMD_BASE} up -d -c')
            }
        }
        */
        stage('post-deploy') {
             environment {
                RANCHER_API_URL_STAGING = "http://34.247.7.73:8080/v2-beta/schemas"
                RANCHER_API_ENVIRONMENT_STAGING = "1a2494"
                RANCHER_API_ACCESS_KEY_STAGING = credentials('RANCHER_API_ACCESS_KEY_STAGING')
                RANCHER_API_SECRET_KEY_STAGING = credentials('RANCHER_API_SECRET_KEY_STAGING')
                RANCHER_CMD_BASE = "rancher -url ${env.RANCHER_API_URL_STAGING} --env ${env.RANCHER_API_ENVIRONMENT_STAGING} --access-key ${env.RANCHER_API_ACCESS_KEY_STAGING} --secret-key ${env.RANCHER_API_SECRET_KEY_STAGING}"
            }
            steps {
                script {
                    PHPRUNNER_SERVICE_ID = sh(returnStdout: true, script: "${RANCHER_CMD_BASE} run --name ${RANCHER_STACK_NAME}/phprunner --pull panamedialottery/euromillions-php:${EM_ENVIRONMENT}").trim()
                }
                sh("""
                    ${RANCHER_CMD_BASE} wait ${PHPRUNNER_SERVICE_ID}
                    script --return --quiet --command \"${RANCHER_CMD_BASE} exec ${PHPRUNNER_SERVICE_ID} vendor/bin/phinx migrate --configuration="phinx.yml" -e staging \"
                """)
            }
            post {
                always {
                    sh("""
                        ${RANCHER_CMD_BASE} rm ${PHPRUNNER_SERVICE_ID}
                    """)
                }
            }
        }
    }
    post {
        always {
            deleteDir() /* clean up our workspace */
        }
        /*
        success {
            echo 'I succeeeded!'
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('

        }
        changed {
            echo 'Things were different before...'
        }
        */
    }
}