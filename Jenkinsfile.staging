pipeline {
    environment {
        EM_ENVIRONMENT = "staging"
        BUILD_IMAGE_TAG = "${env.EM_ENVIRONMENT}_${env.BUILD_NUMBER}"
        RANCHER_STACK_NAME = "euromillions-staging"
    }
    agent {
        label 'aws-slave'
    }
    options {
        skipStagesAfterUnstable()
        timeout( time: 1, unit: 'HOURS' )
    }
    stages {
        stage('pre-build') {
            steps {
                sh('wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz ')
                sh('wget http://geolite.maxmind.com/download/geoip/database/GeoIPv6.dat.gz ')

                sh('gzip -fd GeoIP.dat.gz ')
                sh('gzip -fd GeoIPv6.dat.gz ')

                sh('mv GeoIP.dat src/data/geoipdatabase ')
                sh('mv GeoIPv6.dat src/data/geoipdatabase ')
            }
        }
        stage('test') {
            environment {
                DOCKER_HUB_CREDENTIALS = credentials('docker_hub')
                DOCKER_HUB_USER = "${env.DOCKER_HUB_CREDENTIALS_USR}"
                DOCKER_HUB_PASSWORD = "${env.DOCKER_HUB_CREDENTIALS_PSW}"
            }
            steps {
                sh('echo test')
            }
        }
        stage('build') {
            environment {
                DOCKER_HUB_CREDENTIALS = credentials('docker_hub')
                DOCKER_HUB_USER = "${env.DOCKER_HUB_CREDENTIALS_USR}"
                DOCKER_HUB_PASSWORD = "${env.DOCKER_HUB_CREDENTIALS_PSW}"
            }
            steps {
                sh('echo build')
            }
        }
        stage('deploy') {
            environment {
                RANCHER_ENV_URL_DCORTO = "http://34.247.7.73:8080/v2-beta/projects/1a2494"
                RANCHER_ENV_KEY_DCORTO = credentials('RANCHER_ENV_KEY_DCORTO')
                RANCHER_ENV_SECRET_DCORTO = credentials('RANCHER_ENV_SECRET_DCORTO')
            }
            steps {
                sh('echo deploy')
            }
        }
        stage('post-deploy') {
             environment {
                RANCHER_API_URL_STAGING = "http://34.247.7.73:8080/v2-beta/schemas"
                RANCHER_API_ENVIRONMENT_STAGING = "1a2494"
                RANCHER_API_ACCESS_KEY_STAGING = credentials('RANCHER_API_ACCESS_KEY_STAGING')
                RANCHER_API_SECRET_KEY_STAGING = credentials('RANCHER_API_SECRET_KEY_STAGING')
            }
            steps {
                script {
                    PHPRUNNER_SERVICE_ID = sh(returnStdout: true, script: "rancher -url $RANCHER_API_URL_STAGING --env $RANCHER_API_ENVIRONMENT_STAGING --access-key $RANCHER_API_ACCESS_KEY_STAGING --secret-key $RANCHER_API_SECRET_KEY_STAGING run --name ${RANCHER_STACK_NAME}/phprunner --pull panamedialottery/euromillions-php:${EM_ENVIRONMENT}").trim()
                }
                sh("""
                    #export PHPRUNNER_SERVICE_ID=$PHPRUNNER_SERVICE_ID
                    rancher -url $RANCHER_API_URL_STAGING --env $RANCHER_API_ENVIRONMENT_STAGING --access-key $RANCHER_API_ACCESS_KEY_STAGING --secret-key $RANCHER_API_SECRET_KEY_STAGING wait ${PHPRUNNER_SERVICE_ID}
                    script --return --quiet --command \"rancher -url $RANCHER_API_URL_STAGING --env $RANCHER_API_ENVIRONMENT_STAGING --access-key $RANCHER_API_ACCESS_KEY_STAGING --secret-key $RANCHER_API_SECRET_KEY_STAGING exec ${PHPRUNNER_SERVICE_ID} vendor/bin/phinx migrate --configuration="phinx.yml" -e staging \"
                    rancher -url $RANCHER_API_URL_STAGING --env $RANCHER_API_ENVIRONMENT_STAGING --access-key $RANCHER_API_ACCESS_KEY_STAGING --secret-key $RANCHER_API_SECRET_KEY_STAGING rm ${PHPRUNNER_SERVICE_ID}
                """)
            }
        }
    }
    post {
        always {
            echo 'One way or another, I have finished'

            // Shutdown test
            sh('sudo docker-compose -p test -f docker-compose.test.yml down')

            echo "${PHPRUNNER_SERVICE_ID}"
        }
        success {
            echo 'I succeeeded!'
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('

        }
        changed {
            echo 'Things were different before...'
        }
    }
}