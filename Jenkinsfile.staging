pipeline {
    environment {
        EM_ENVIRONMENT = "staging"
        BUILD_IMAGE_TAG = "${env.EM_ENVIRONMENT}_${env.BUILD_NUMBER}"

        DOCKER_HUB_CREDENTIALS = credentials('docker_hub')
        DOCKER_HUB_USER = "${env.DOCKER_HUB_CREDENTIALS_USR}"
        DOCKER_HUB_PASSWORD = "${env.DOCKER_HUB_CREDENTIALS_PSW}"

        RANCHER_STACK_NAME = "euromillions-staging"

        RANCHER_ENV_URL = "http://34.247.7.73:8080/v2-beta/projects/1a7"
        RANCHER_ENV_KEY = credentials('RANCHER_ENV_KEY_STAGING')
        RANCHER_ENV_SECRET = credentials('RANCHER_ENV_SECRET_STAGING')
        RANCHER_COMPOSE_CMD_BASE = "rancher-compose --url $RANCHER_ENV_URL --access-key $RANCHER_ENV_KEY --secret-key $RANCHER_ENV_SECRET -p ${RANCHER_STACK_NAME} -f docker-compose.prod.yml -f docker-compose.staging.yml -r rancher-compose.staging.yml -e .env.staging"
    }
    agent {
        label 'aws-slave'
    }
    options {
        skipStagesAfterUnstable()
        timeout( time: 1, unit: 'HOURS' )
    }
    stages {
        stage('deploy') {
            steps {
                //sh('chmod +x devOps/ci/deploy.sh; devOps/ci/deploy.sh')
                sh('${RANCHER_COMPOSE_CMD_BASE} up -d -p -u')
                sh('${RANCHER_COMPOSE_CMD_BASE} up -d -p -u --force-upgrade web php phpcron')
            }
        }
        stage('post-deploy') {
             environment {
                RANCHER_API_URL_STAGING = "http://34.247.7.73:8080/v2-beta/schemas"
                RANCHER_TARGET_ENVIRONMENT = "1a7"
                RANCHER_API_ACCESS_KEY = credentials('RANCHER_API_ACCESS_KEY_STAGING')
                RANCHER_API_SECRET_KEY = credentials('RANCHER_API_SECRET_KEY_STAGING')
                RANCHER_CMD_BASE = "rancher -url ${env.RANCHER_API_URL_STAGING} --env ${env.RANCHER_TARGET_ENVIRONMENT} --access-key ${env.RANCHER_API_ACCESS_KEY} --secret-key ${env.RANCHER_API_SECRET_KEY}"
            }
            steps {
                script {
                    PHPRUNNER_SERVICE_ID = sh(returnStdout: true, script: "${RANCHER_CMD_BASE} run --name ${RANCHER_STACK_NAME}/phprunner --pull panamedialottery/euromillions-php:${EM_ENVIRONMENT}").trim()
                }
                sh("""
                    ${RANCHER_CMD_BASE} wait ${PHPRUNNER_SERVICE_ID}
                    script --return --quiet --command \"${RANCHER_CMD_BASE} exec ${PHPRUNNER_SERVICE_ID} vendor/bin/phinx migrate --configuration="phinx.yml" -e staging \"
                """)
            }
            post {
                always {
                    sh("""
                        ${RANCHER_CMD_BASE} rm ${PHPRUNNER_SERVICE_ID}
                    """)
                }
                success {
                    // Confirm the deploy on Rancher Node
                    sh('${RANCHER_COMPOSE_CMD_BASE} up -d -c')
                }
            }
        }
    }
    post {
        always {
            deleteDir()
        }
    }
}