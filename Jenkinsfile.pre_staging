pipeline {
    environment {
        EM_ENVIRONMENT = "pre_staging"
        BUILD_IMAGE_TAG = "${env.EM_ENVIRONMENT}_${env.BUILD_NUMBER}"

        DOCKER_HUB_CREDENTIALS = credentials('docker_hub')
        DOCKER_HUB_USER = "${env.DOCKER_HUB_CREDENTIALS_USR}"
        DOCKER_HUB_PASSWORD = "${env.DOCKER_HUB_CREDENTIALS_PSW}"

        RANCHER_STACK_NAME = "euromillions-${env.RANCHER_SUFFIX}"

        RANCHER_ENV_URL = "http://34.247.7.73:8080/v2-beta/projects/1a7"
        RANCHER_ENV_KEY = credentials('RANCHER_ENV_KEY_STAGING')
        RANCHER_ENV_SECRET = credentials('RANCHER_ENV_SECRET_STAGING')
        RANCHER_COMPOSE_CMD_BASE = "rancher-compose --url $RANCHER_ENV_URL --access-key $RANCHER_ENV_KEY --secret-key $RANCHER_ENV_SECRET -p ${RANCHER_STACK_NAME} -f docker-compose.prod.yml -f docker-compose.pre_staging.yml -r rancher-compose.pre_staging.yml -e .env.pre_staging"
    }
    agent {
        label 'aws-slave'
    }
    options {
        skipStagesAfterUnstable()
        timeout( time: 1, unit: 'HOURS' )
    }
    stages {
        stage('pre-build') {
            steps {
                // send build started notifications
                // slackSend (color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")

                sh('chmod +x devOps/ci/pre_build.sh; devOps/ci/pre_build.sh')

                sh('echo ${RANCHER_STACK_NAME}')
            }
        }
        stage('deploy') {
            steps {
                // sh('chmod +x devOps/ci/deploy.sh; devOps/ci/deploy.sh')
                sh('${RANCHER_COMPOSE_CMD_BASE} up -d -p -u')
                sh('${RANCHER_COMPOSE_CMD_BASE} up -d -p -u --force-upgrade web php phpcron')
            }
            post {
                success {
                    // Confirm the deploy on Rancher
                    sh('${RANCHER_COMPOSE_CMD_BASE} up -d -c')
                }
            }
        }
    }
}