---
- name: start database container
  docker:
    name: develdbmaster
    image: rmrbest/percona
    state: reloaded
    ports:
      - "3306:3306"
    volumes:
      - /home/vagrant/mysqldata:/var/lib/mysql
    env:
      REPLICATION: true
      REPLICATION_NODE: 1
      REPLICATION_SLAVE_USER: slave_db1
      REPLITACION_SLAVE_PASSWORD: euromillions
      MYSQL_ROOT_PASSWORD: tpl9
      MYSQL_USER: euromillions
      MYSQL_PASSWORD: tpl9
      MYSQL_DATABASE: euromillions

- name: start database slave container
  docker:
    name: "{{database_slave_name}}"
    image: rmrbest/percona
    state: reloaded
    volumes:
      - /home/vagrant/mysqldata_slave:/var/lib/mysql
      - /home/vagrant/backup_slave:/opt/backups
      - /var/www/global_config/:/var/www/global_config/
    env:
      REPLICATION: true
      REPLICATION_NODE: 2
      REPLICATION_SLAVE_USER: slave_db1
      REPLITACION_SLAVE_PASSWORD: euromillions
      MYSQL_USER: euromillions
      MYSQL_PASSWORD: tpl9
      MYSQL_ROOT_PASSWORD: tpl9
      MYSQL_DATABASE: euromillions
    links:
      - develdbmaster:mysql

- name: start compass web container
  docker:
    name: compassweb
    image: antonienko/compass-watch
    command: watch --poll /src/compass_web
    volumes: /var/www:/src

- name: start compass admin container
  docker:
    name: compasadmin
    image: antonienko/compass-watch
    command: watch --poll /src/compass_admin
    volumes: /var/www:/src

- name: start redis container
  docker:
    name: develredis
    image: redis
    ports:
      - "6379:6379"

- name: build web container
  docker_image:
    name: develweb
    path: /vagrant/src/docker/devel-web
    state: build

- name: start web container
  docker:
    name: "{{webserver_container_name}}"
    image: develweb
    state: reloaded
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www:/var/www
      - /vagrant/src/docker/devel-web/nginxconfig:/etc/nginx/sites-enabled
      - /vagrant/src/docker/devel-web/certs:/etc/nginx/ssl
    links:
      - develdbmaster:mysql
      - develredis:redis
    env:
      EM_ENV: development
- name: PhantomJs and ZAP security
  docker:
    name: phantomJsZAP
    image: rmrbest/phantomjs-zap
    ports:
      - "4444:4444"
      - "8090:8090"

- name: Create script with env vars
  shell: docker exec {{webserver_container_name}} printenv | sed 's/^\(.*\)$/export \1/g' | grep EM_ENV > /tmp/project_env.sh

- name: initialize test database
  shell:  mysql -h 127.0.0.1 -u root -ptpl9 --port=3306 -e 'CREATE DATABASE IF NOT EXISTS euromillions_test'